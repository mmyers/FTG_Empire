Enhanced Modification of Province Information with Randomizing Events.

Empire is a DOS program for automatically generating the events needed
for an Europa Universalis 2 mod that wants to change some province stats
in a randomized manner, such as Alun's Reformation Mod for changing
province religion.

This version of Empire has been extensively modified for use by For the Glory.

Usage: Empire [-h|H] <province file> <data file>

The -h option tells the program to halt on exit if there's any errors
or warnings, and the -H option tells it to halt on exit always.
Halting on exit is useful if you've created a Windows shortcut or bat file
for running the program, and want to have a chance to see any messages.

The province file should be the province.csv file used for the mod.
It is only read from, not written to, and is used for determining
the province names corresponding to the province ID numbers.

The data file contains the source specification of the province
modifications wanted in the mod. The format of this file is described
below. The data file is only read, not written to.

Where the generated output goes is specified in the data file.


Empire data file format

Terms:
'#' is the the comment character (except when in strings). Any text from
the comment character to the end of the line is ignored by Empire.

A tag is an alfanumeric string starting with a letter (case dependent).
Empire recognizes a number of keyword tags. These tags have special
meaning as described below, and may not be used for other purposes.

A string is any sequence of characters within double quote " characters.
Note that there is currently no "quoting" or "escaping" of the " character,
so the string cannot contain these.

A number is an integer number.

A date is a date specified on yyyy-mm-dd format.

A list is a '(' charachter followed by one or more occurances of tags,
strings or numbers (separated by white space), followed by a ')' character.


Aside from comments and white spaces, the data file consists of a sequence
of keyword tags, each of which may be followed by an argument list, as
specified by the keyword tag in question.

Keyword tags:

ProvinceModificationDataFile
Required tag. No argument list. This tag identifies the file as an Empire
data file, and must be the first tag of the file.

RNGCTag (CountryTag)
Required tag. Specifies the FTG country tag used for the Random Number
Generator Country.
Example:
RNGCTag (MUS)

EventIDPrefix (PrefixNum)
Required tag. Specifies a number to prefix all the automatically generated
event numbers with. This is used to be able easily remap all events to a
different ID range, in order to avoid any event ID conflicts. Should be in
the range [1 .. 2146].
Example:
EventIDPrefix (717)

OutputFile (FileNameString)
Required if you actually want to generate any output :-). (Ie, there's no
default file.) Note that the file is opened for writing right away, erasing
any previous data there without warning. You may change the output file
any number of times in the data file. (But not back to a previous file, if
you want to keep that data...)
Example:
OutputFile ("foo.txt")

OutputFileMod (FileNameString)
Added in the FTG modifications. This file is used to generate the actual
conversion events, as opposed to the RNGC events. It is required, and it must
be different from the RNGC files (although the program does not check this).

OutputFileModHeader (String)
Added in the FTG modifications. Copies the specified string into the start of
the conversion event file (defined in OutputFileMod). Whenever the OutputFileMod
changes, this string is automatically copied into the new file also.

SetString (StringNameTag String)
Associates the specified string with the string name tag. Some of the keyword
tags take string name tags as arguments, instead of the strings themselves,
in order to keep things reasonably clean.
Example:
SetString (StartCatholic "religion = catholic")

TargetString (String)
Copies the specified string straight to the output file. Normally used for
adding comments to the generated files.
Example:
TargetString (
"# This is a MyMod file.
# Automatically generated by Empire.

")

StartCondition (IDNumber StringNameTag)
This will generate an output line on the form "province = { id = %d %s }",
where '%d' will be replaced by the province ID number and '%s' with the
string specified by the StringNameTag (which must be previously defined).
Used to generate a file that can be included to set the province start
conditions of a scenario.
Example:
StartCondition (236 StartCatholic)

EventData (EventTag EventNameTag EventDescriptionTag EventCommandTag)
This keyword tag is used for specifying an actual province modification event.
This is the event that the player will se when one of the player's provinces
is changed by the mod.
EventTag is the name tag that this modification event will be associated to.
EventNameTag should refer to the string that will go to the right hand side
of the 'name = ' part of the modification event (ie the title of the event).
EventDescriptionTag should refer to the string that will go to the right hand
side of the 'desc = ' part of the modification event (ie the description of
the event).
These two strings may contain up to three instances each of '%s', which will
be replaced by the name of the affected province (as specified by the province
file).
EventCommandTag should refer to the string that will go into the body of the
command of the modification event (ie within the curly brackets of the
'command = {  }' line). This string may contain up to three instances of '%d',
which will be replaced by the province ID number of the affected province.
NOTE: for each <EventTag> modification event you define, there will also
be references to flags on the form: Small<EventTag>, Normal<EventTag> and
Large<EventTag>. One of these should be set (and the others cleared) some time
before the modifications may start (for the Random Number Generator Country,
since flags are country specific). Event code is NOT generated for that.
Example:
SetString (ToProt "%s converted to protestantism")
SetString (DescProt "yada yada")
SetString (ComProt "type = provincereligion which = %d value = protestant")
EventData (Protestant ToProt DescProt ComProt)

Modification (ProvinceIDNum EventTag TriggerStringNameTag StartDate EndDate
SmallNum NormalNum LargeNum)
This keyword tag is used for specifying the probability etc of the specified
EventTag to happen. It will generate a number of events for the Random Number
Generator Country (which needs to be set up separately) that eventually
may or may not trigger the modification event specified by EventTag.
ProvinceIDnum is the FTG ID number of the province for this modification.
EventTag is the actual province modification event to (possibly) be triggered.
TriggerStringNameTag should refer to a string that specifies any required
preconditions for the modification to take place (except for Small/Normal/Large
version handling, that will be added automatically). This string may contain
up to ten instances of '%d', which will be replaced by the province ID number
of the affected province. For nice looking output, add eight spaces of
indentation.
StartDate and EndDate defines the time period during which the modification
may take place.
SmallNum, NormalNum and LargeNum are the probabilities (in percent) for the
respective versions that the EventTag will be trigered. Note that while the
versions are called small, normal and large (for historical reasons), they're
just three different sets of probabilities that could represent anything, and
one of which is determined beforehand (by setting the corresponding flag) in
some way that is up to the mod designer.
[[[Also note that while you can specify
any integer probability in the 0 .. 100 range, only a limited set is actually
supported. Empire will pick whichever of them is closest. The supported ones
are: 0, 5, 10, 15, 28, 39, 48, 61, 72, 85, 90, 95 and 100 percent. The ones
in the middle requires more events to implement, and thus increase the size
of the mod more.]]]
The preceding bracketed paragraph is no longer correct for the FTG
modification of the program. Any chance can be generated using ai_chance.
Example:
SetString (PGenericTrig
"        OR = {
            provincereligion = { province = %d data = catholic }
            provincereligion = { province = %d data = reformed }
        }
")
Modification (236 Protestant PGenericTrig 1550-01-01 1558-12-30  0  5 15) # The Highlands

EndOfData
Required tag. No argument list. This should be the last tag of the file.
Used to verify that we got all the way through. Parsing will stop at this
tag even if more data does follow. (You'll get warned of any spurious data
though.)
